

.cat-logo {
    height: 40px;
    width: 40px;
}

.img-link {
    text-decoration: none; /* Remove underline */
    display: inline-block; /* Make it a block-level element */
    padding: 0; /* Remove padding */
    margin: 0; /* Remove margin */
    border: none; /* Remove border */
}

.imgBx {
background-color: transparent;
border: 2px solid var(--data-bg-color) !important; 
/* transition: background-color 0.3s, color 0.3s; */
}

.imgBx:hover {
    /* background-color: attr(data-bg-color); */
    background-color: var(--data-bg-color);
/* background-color: #ff5733; */
 /* Change to your desired background color on hover */
color: #f2f2f2 !important; /* Change to your desired text color on hover */
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 20;
}
header{
  margin-bottom: 20px;
}

.content-wrapper {
  flex: 1;
}

.circle-container {
  width: 200px; /* Define the width of your circular container */
  height: 200px; /* Define the height of your circular container */
  border-radius: 50%; /* Create a circular shape */
  overflow: hidden; /* Hide the image overflow outside the circle */
  position: relative;
  margin: 0 auto;
}

.circle-photo {
  width: 100%; /* Make the image fill the circular container */
  height: 100%; /* Make the image fill the circular container */
  object-fit: cover; /* Maintain the image aspect ratio and cover the container */
  object-position: center center; /* Set the center of the image to your desired x and y coordinates */
}

.circle-badge {
  background-color: white;
  color: black;
  border-radius: 50%;
  padding: 3px 5px; 
  font-size: 0.7em;
  width: 1em;
  height: 1em;
  line-height: 1em;
  text-align: center;
  vertical-align: middle;

}

/* .filter-container {
  transition: wave 1s ease-in-out; / /* Add a transition for height */
/* } */

@keyframes wave {
  0% {
      height: 100px; /* Start with the initial height */
  }
  50% {
      height: 200px; /* Peak height during the animation */
  }
  100% {
      height: 100px; /* Return to the initial height */
  }
} */




/* Add a CSS class to hide the card */
.hidden-card {
  display: none;
}

.card {
  border: 4px solid var(--bs-border-color-translucent);
  /* margin: 0.05rem; */
  padding-left: 15px;
  padding-right: 15px;
}

.card-hover {
  transition: transform 0.3s ease-in-out;
}

.card-hover:hover {
  transform: translateY(-5px);
}

/* Remove hyperlink-like styles */
.card .btn-group .btn {
  text-decoration: none;
  background-color: #333; /* Set the background color to dark */
  color: #f2f2f2; /* Set text color to pastel-white */
  border: none; /* Remove the border */
  cursor: pointer; /* Change the cursor to a pointer on hover */

  /* Add a transition for a smooth hover effect */
  transition: background-color 0.3s, color 0.3s;
}

/* Add hover effect */
.btn-group .btn:hover {
  background-color: #555; /* Darken the background color on hover */
  color: #fff; /* Lighten the text color on hover */
}



.non-a {
  
    text-decoration: none;

/* Change the color of links */

      color: #6c757d; /* Change to the desired color */
}

/* .card-container {
  transition: height 0.3s ease; 
  overflow: hidden;
}

.category-background {
  transition: all 0.3s ease;
} */


/* Add these CSS rules for smooth transitions and rounded edges */
.category-background {
  /* top: 0;
  left: 0; */
  background-color: transparent;
  transition: background-color 0.3s ease; /* Smooth background color transition */
  border-radius: 15px; /* Adjust the border radius to control rounded edges */
  
}



.imgBx svg {
    display: block;
    margin: 0 auto;
}



/* Part for vision */

.vision {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  
.circle {
  width: 80%;

  /* background-color: var(--data-bg-color); */
   /* Use your custom property for the background color */
  border-radius: 50%; /* Make it a circle */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 20px; 
  /* border: 5px solid var(--data-bg-color); */

}



.circle img {
  width: 80%;  /* Adjust the size of the image inside the circle */
  height: auto; /* Adjust the size of the image inside the circle */
  border-radius: 50%;
}


/* Define a fade animation */
/* .fade {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.fade.show {
  opacity: 1;
} */

.image-container {
  max-width: 100%;
  text-align: center;
}
.image-container img {
  width: auto;
  max-width: 100%; /* Image will not exceed the container width */
  height: auto;
}

.image-container img {
  margin: 10px 5%; /* 10px top/bottom, 5% left/right margins */
}

.image-container.square img {
  margin: 20px 5%; /* More margin for square images */
}

.image-text {
  text-align: center;
  margin-top: 10px;
  font-weight: bold;
}


/* Vertically and horizontally center an image */

.centered-img {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* .code-box {
  max-width: 100%;
  overflow: hidden!important;
}

.code-box pre {
  white-space: nowrap;
  font-size: 1em; 
  width: auto;
  overflow: visible;
} */


.left-vertical-indicator-bar {
  background-color: #ffaa00;
  width: 10px;
}


.control-bar {
  background-color: #c0c0c0;
  padding: 8px;
}


/* Part form combined gen */

.programmer-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  border: 1px solid #ccc;
  border-radius: 5px;
  margin: 10px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  overflow: hidden;
}

.control-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #c0c0c0;
  padding: 8px;
  border-bottom: 1px solid #ccc;
}

.name {
  margin-right: 16px;
  font-weight: bold;
}

.buttons button {
  margin-right: 8px;
  background-color: #007BFF;
  color: white;
  border: none;
  padding: 6px 10px;
  border-radius: 5px;
  cursor: pointer;
}

.displayer {
  display: flex;
  flex-direction: row;
}

.left-vertical-indicator {
  width: 10px;
  background-color: #ffaa00;
}

.code-box {
  flex-grow: 1;
  padding: 10px;
  background-color: #1E1E1E;
  color: white;
  overflow: auto;
}


.line-numbering-btn {
  font-size: 16px;
  background-color: #007BFF;
  color: white;
  border: none;
  padding: 6px 10px;
  border-radius: 5px;
  cursor: pointer;
}


@media (max-width: 768px) {
  .image-container {
      font-size: 16px; /* Set a default font-size for mobile screens */
  }
  .image-container img {
    margin: 10px 0; /* Remove horizontal margins */
}
}

@media (min-width: 769px) and (max-width: 1024px) {
  .image-container {
      font-size: 18px; /* Set a default font-size for tablets */
  }
}

@media (min-width: 1025px) {
  .image-container {
      font-size: 20px; /* Set a default font-size for desktops */
  }
}



/* CSS for the rotated jumbotron */
@media (min-width: 1200px) {
    .shifted-right-jumbotron {
      position: relative;
      transform: translateX(calc(100% / 3)); /* Move right by 1/3 of the width */
    }

    .shifted-left-jumbotron {
        position: relative;
        transform: translateX(calc(-100% / 3)); /* Move right by 1/3 of the width */
      }
  }

/* Media query for small screens */
@media (max-width: 1200px) {
    .container {
      display: flex;
      flex-direction: column;
    }
  
    .col-md-4 {
      width: 100%;
      text-align: center; /* Center content in Column 2 */
    }
  
    /* Add styles for the rotated jumbotron */
    .rotated {
      margin: 0 auto; /* Center the rotated jumbotron */
      transform: rotate(-90deg);
      transform-origin: left top;
      margin-top: 10px; /* Add some margin to prevent overlap */
    }
  
    /* Add styles for the last element in Column 2 */
    .col-md-4 .jumbotron:last-child {
      margin-top: auto;
    }
  }
  

